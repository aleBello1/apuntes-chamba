Al bajar un nuevo proyecto cambiarse a la rama develop.


RAMAS

Cuando cambias de una rama a otra y tienes cambios pendientes sin hacer commit, existe el riesgo de perder esos cambios si fuerzas el cambio de rama. Por eso, antes de cambiar de rama, es recomendable hacer commit de todos los cambios. *************************


Rama feature ---------------------------------------------

Nos posicionamos en la rama develop.
	git switch devlop

Crear la rama feature. Para nombrar a la rama se usa la nomeclatura kebab-case (guiones medios) y se asigna
un nombre descriptivo de acuerdo a la funcionalidad que se agregara. Pe: feature/agregar-login, feature/mejorar-busqueda-productos, etc.
	git switch -c feature/nombre-descriptivo-x

En la rama feature hacer todo las tareas que se nos encarga.
Al finalizar las tareas, nos posicionamos en la rama develop y la unimos con la rama feature.
	git switch develop
	git merge feature/nombre-descriptivo-x

Cuando nos aseguremos de que todo esta bien se elmina la rama feature.
	git branch -d feature/nombre-descriptivo-x
	git push origin --delete feature/nombre-descriptivo-x



GIT FLOW

Gestionar ramas de manera más eficiente y Automatiza merge's.
No es una herramienta nueva, sino un método que puedes aplicar usando Git.

main (o master) → Contiene el código estable (versiones finales).
develop → Rama de integración (aquí se juntan las nuevas features antes del release).
feature/* → Ramas para desarrollar nuevas funcionalidades.
release/* → Ramas para preparar una nueva versión.
hotfix/* → Ramas para corregir errores críticos en producción.

git flow init -> Activar el modo Git Flow" en el repositorio.
	Configura en tu repositorio local las reglas y nombres que usará para crear y finalizar ramas.
	Detecta cual es la rama principal, cual es la rama de desarrollo (Si no tienes develop, la crea 
	a partir de main).
	Se definen los prefijos para cada tipo de rama (el texto que se coloca antes del nombre de la 
	rama para indicar su tipo pe feature, realese, etc).
	A todos lo que nos pregunte el comando se le da enter, al finalizar la preguntas nos dejara en 
	la rama develop.
	No importa en que rama nos encontremos, este comando se puede usar, sin embargo si en la rama 
	actual tenemos algo pendiente por darle commit, este comando fallara. ******

git flow feature start nombreRama -> Crea una rama local con el prefijo utilizado (feature en este caso)
	a partir de la rama develop.
	Internamente ejecuta varios comando de git: ejecuta el comando para que nos cambiemos a la rama
	develop (checkout/switch), bajemos lo relacionado a esa rama para tenerla actualizada (pull), crea 	la rama de feature y nos cambia a esta nueva rama (switch).
	El nombre de la rama será un nombre que describa la funcionalidad que se implementara.

git flow feature finish nombreRama -> Fusiona (merge) la rama feature/nombreRama en develop, despues
	Borra la rama feature/nombreRama (localmente) y nos posiciona automáticamente en develop.
	Fallara el comando si hay algo pendiente por hacerle commit en la rama feature.
	Si hay conflictos Git Flow detendrá el proceso y te pedirá resolverlos manualmente (como en un
	merge clásico).


